substitutions:
  name: esp8266-az-2
  log_level: INFO
  location: "Lounge"

esp8266:
  board: nodemcuv2

packages:
  wifi: !include common/wifi.yaml
  device_base: !include common/device_base.yaml
  esp8266_i2c: !include common/esp8266_i2c.yaml
  esp8266_spi: !include common/esp8266_spi.yaml

sensor:
  - platform: bme680
    temperature:
      name: "Temperature"
      id: bme680_temperature
      oversampling: 16x
    pressure:
      name: "Pressure"
      id: bme680_pressure
      oversampling: 16x
    humidity:
      name: "Humidity"
      id: bme680_humidity
      oversampling: 16x
    gas_resistance:
      name: "Gas Resistance"
      id: gas_resistance
    address: 0x77
    iir_filter: 31x
    update_interval: 60s
  - platform: template
    id: iaq
    name: "IAQ"
    icon: "mdi:gauge"
    # unit_of_measurement: "IAQ"
    # Calculation: comp_gas = log(R_gas[ohm]) + 0.04 log(Ohm)/%rh * hum[%rh]
    lambda: |-
      return log(id(gas_resistance).state) + 0.04 * id(bme680_humidity).state;

font:
  - file: "gfonts://Open Sans"
    size: 12
    id: title_font
  - file: "gfonts://Open Sans"
    size: 26
    id: time_font
  - file: "gfonts://Inconsolata"
    size: 14
    id: data_font

display:
  - platform: ssd1306_spi
    # 128x64 mono
    model: "SSD1306 128x64"
    reset_pin: D0
    dc_pin: D3
    cs_pin: GPIO15
    rotation: 180
    lambda: |-
      it.print(63, 0, id(title_font), TextAlign::TOP_CENTER, "${name}");
      it.strftime(63, 30, id(time_font), TextAlign::CENTER, "%H:%M", id(sntp_time).now());
      if (id(bme680_temperature).has_state()) {
        it.printf(0, 63, id(data_font), TextAlign::BOTTOM_LEFT , "%.1fÂ°C", id(bme680_temperature).state);
      }
      if (id(bme680_humidity).has_state()) {
        it.printf(127, 63, id(data_font), TextAlign::BOTTOM_RIGHT , "%.1f%%rH", id(bme680_humidity).state);
      }

