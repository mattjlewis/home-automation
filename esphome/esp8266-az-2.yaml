substitutions:
  name: esp8266-az-2
  log_level: INFO
  location: "Lounge"
  f_time_size: "26"
  f_data_size: "14"
  f_name_size: "12"

esp8266:
  board: nodemcuv2

packages:
  wifi: !include common/wifi.yaml
  device_base: !include common/device_base.yaml
  esp8266_i2c: !include common/esp8266_i2c.yaml
  esp8266_spi: !include common/esp8266_spi.yaml
  fonts: !include common/fonts.yaml

bme680_bsec:
  address: 0x77
  iaq_mode: static
  # ulp (5min) or lp (3sec)
  sample_rate: ulp

sensor:
  - platform: bme680_bsec
    temperature:
      id: temperature
      name: "Temperature"
    pressure:
      id: pressure
      name: "Pressure"
    humidity:
      id: humidity
      name: "Humidity"
    gas_resistance:
      id: gas_resistance
      name: "Gas Resistance"
    iaq:
      id: iaq
      name: "IAQ"
    iaq_accuracy:
      id: iaq_accuracy_num
      name: "Numeric IAQ Accuracy"
    co2_equivalent:
      id: co2_equivalent
      name: "CO2 Equivalent"
    breath_voc_equivalent:
      id: breath_voc_equivalent
      name: "Breath VOC Equivalent"

text_sensor:
  - platform: bme680_bsec
    iaq_accuracy:
      id: iaq_accuracy
      name: "IAQ Accuracy"

display:
  - platform: ssd1306_spi
    # 128x64 mono
    model: "SSD1306 128x64"
    reset_pin: D0
    dc_pin: D3
    cs_pin: GPIO15
    rotation: 180
    lambda: |-
      it.strftime(0, 0, id(f_time), TextAlign::TOP_LEFT, "%H:%M", id(sntp_time).now());
      if (id(iaq).has_state()) {
        it.printf(it.get_width()-1, 0, id(f_data), TextAlign::TOP_RIGHT , "%.0f", id(iaq).state);
      }
      if (id(temperature).has_state()) {
        it.printf(0, it.get_height()/2, id(f_data), TextAlign::CENTER_LEFT , "%.1fÂ°C", id(temperature).state);
      }
      if (id(humidity).has_state()) {
        it.printf(it.get_width()-1, it.get_height()/2, id(f_data), TextAlign::CENTER_RIGHT , "%.1f%%rH", id(humidity).state);
      }
      it.print(it.get_width()/2, it.get_height()-1, id(f_name), TextAlign::BOTTOM_CENTER, "${name}");

